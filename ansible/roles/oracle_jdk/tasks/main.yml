---
- name: check java_home directory
  stat: path={{ java_unarchive_dir }}
  register: java_home_check

- name: check jdk_archive file
  stat: path={{ jdk_archive }}
  register: jdk_archive_check

- name: remove jdk_archive if it exists and it is empty
  file: state=absent path={{ jdk_archive }}
  when: jdk_archive_check.stat.exists and java_home_check.stat.size == 0

- name: download Java
  command: "wget -q -O {{ jdk_archive }} --no-check-certificate --no-cookies --header 'Cookie: oraclelicense=accept-securebackup-cookie' {{ jdk_tarball_url }} creates={{ jdk_archive }}"
  when: java_home_check.stat.exists == False

- name: create java_install_dir if not exists
  file: path={{ java_install_dir }} state=directory owner=root group=root mode=0755

- name: unpack archive
  unarchive: src={{ jdk_archive }} dest={{ java_install_dir }} copy=no creates={{ java_unarchive_dir }} owner=root group=root

- name: link java_home
  file: path={{ java_home }} src={{ java_unarchive_dir }} state=link

- name: make Java available for system
  command: update-alternatives --install /usr/bin/java java {{ java_home }}/bin/java 18000

- name: run update-alternatives to set the installed java
  command: update-alternatives --set java {{ java_home }}/bin/java

- name: make Javac available for system
  command: update-alternatives --install /usr/bin/javac javac {{ java_home }}/bin/javac 18000

- name: run update-alternatives to set the installed javac
  command: update-alternatives --set javac {{ java_home }}/bin/javac

- name: clean up
  file: state=absent path={{ jdk_archive }}
